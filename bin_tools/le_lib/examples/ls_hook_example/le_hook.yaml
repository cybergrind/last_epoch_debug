hooks:
  - name: example_hook
    #target_address: 0x6ffff84e20d0
    target_address: '0x118a770'
    memory_content: '@SUVATAUAWH\x83\xec(\x80=\xe0F.\x03\x00M\x8b\xe9M\x8b\xe0H\x8b\xeaH\x8b'
    hook_functions:
      - le_lib_echo
    target_process: 'Last Epoch.exe1'
    base_file: 'GameAssembly.dll'
    align_size: 14
    overwritten_instructions: |
      ;; base is: {# 0x0 #}
      push    rbx
      push    rbp
      push    rsi
      push    r12
      push    r13
      push    r15
      sub     rsp, 0x28

  # QoL: great, pickup without clickin on item
  - name: disable_click_check_2
    # EpochInputManager$$GetInteractMoveButtonDown
    # replaced with call to
    # EpochInputManager$$GetInteractMoveButtonHold
    # def tohex(val, nbits): return hex((val + (1 << nbits)) % (1 << nbits))
    # Keep the rest of instructions intact
    target_address: '0x1ec61fa'
    memory_content: '\xe8\x41\x71\xf3\xff'
    hook_functions: []
    memory_overwrite: '\xe8\x91\x71\xf3\xff'
    target_process: 'Last Epoch.exe'
    base_file: 'GameAssembly.dll'
    align_size: 5
    overwritten_instructions: ''

  # QoL: great, pickup without stopping
  - name: disable_block_movement
    # in GroundItemLabelButton Update
    # replace call to EpochInputManager$$set_ShouldBlockMovementOnCurrentClickDownState
    target_address: '0x1ec6257'
    memory_content: '\xe8\x44\x35\xF4\xFF'
    hook_functions: []
    memory_overwrite: '\x90\x90\x90\x90\x90'
    target_process: 'Last Epoch.exe'
    base_file: 'GameAssembly.dll'
    align_size: 5
    overwritten_instructions: ''

  - name: set_movement_during_use_to_1
    target_address: '0xefd92d'
    memory_content: '\x0f\xb6\x86\x84\x00\x00\x00'
    hook_functions: []
    memory_overwrite: '\xb8\x01\x00\x00\x00\x90\x90'
    target_process: 'Last Epoch.exe1'
    base_file: 'GameAssembly.dll'
    align_size: 7
    overwritten_instructions: ''

  - name: disable_block_movement_in_set_should_block_movement
    target_address: '0x1e097b2'
    memory_content: '\x88\x91'
    hook_functions: []
    memory_overwrite: '\xc6\x81'
    target_process: 'Last Epoch.exe1'
    base_file: 'GameAssembly.dll'
    align_size: 4
    overwritten_instructions: ''

  # QoL: good, works only for nearest items
  - name: auto_pickup_hook
    # in SetGroundTooltipText
    # 0f 84 a9 01 00 00 45 33 c9 41 b0 01 48 8b d7 e8
    target_address: '0x1ec79e3'
    memory_content: 'E3\xc9A\xb0\x01H\x8b\xd7\xe8\xbf\x9d='
    hook_functions:
      #- le_lib_echo
      - le_lib_pickup
    target_process: 'Last Epoch.exe'
    base_file: 'GameAssembly.dll'
    align_size: 14
    overwritten_instructions: |
      xor r9d, r9d
      mov r8b, 1
      mov rdx, rdi
      ;; base is: {# 0x0 #}

      ;; save return address
      mov r11, {{ src_address }}
      add r11, 14
      ;; save as return address
      push r11

      ;; address for: TMPro.TMP_Text$$SetText
      mov r11, {# 0x32a17b0 #}
      ;; call {# 0x32a17b0 #}
      jmp r11
